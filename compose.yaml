
services:
  server:
    build:
      context: .
      target: development
    ports:
      - 8080:8080
    depends_on:
      mongodb:
        condition: service_started
      sqlserver:
        condition: service_started
#      systemServicesFake:
#        condition: service_started
    networks:
      - app-network
        
    develop:   # Helps with automatically updating the running compose service whenever you make changes to your application, to use it, you must run: docker compose watch
      watch:
        - action: rebuild
          path: .
  
  container.tests:
    image: codeapi2-server
    build:
      context: .
      dockerfile: ContainerTests/Dockerfile
    depends_on:
      server:
        condition: service_started
        
    networks:
      - app-network
    
  mongodb:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodb_data:/data/db
    
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - 16686:16686
      - 4317:4317
      - 4318:4318
      - 9411:9411
    networks:
      - app-network 
  
  
  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge
    container_name: sqlserver
    ports:
      - 1435:1433
    environment:
      - ACCEPT_EULA=1
      - MSSQL_SA_PASSWORD=Password_123
      - MSSQL_PID=Developer
      - MSSQL_USER=sa
    volumes:
      - ./data:/var/opt/mssql/data
      - ./log:/var/opt/mssql/log

    command: [ "/opt/mssql/bin/sqlservr" ]
    
    networks:
      - app-network
    
#  systemServicesFake:
#    image: sheyenrath/wiremock.net:1.5.12 #Locking the version since they made syntax updates in 1.5.13.
#    command: [ "dotnet", "wiremock-net.dll", "--Urls", "http://*:80 http://*:9001", "--ReadStaticMappings", "true", "--WireMockLogger", "WireMockConsoleLogger" ]

volumes:
  mongodb_data:
    
networks:
  app-network:
    external: true